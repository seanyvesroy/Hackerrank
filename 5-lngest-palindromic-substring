class Solution:
    def longestPalindrome(self, s: str) -> str:
        n = len(s)
        dp = [[False] * n for _ in range(n)]
        ans = [0,0]
        for i in range(len(s)):
            dp[i][i] = True
        for i in range(len(s) - 1):
            if s[i] == s[i + 1]:
                dp[i][i + 1] = True
                ans = [i, i + 1]
        
        
        for i in range(2,len(s)):
            j = 0
            while j + i < len(s):
                if s[j] == s[j + i] and dp[j + 1][j + i - 1]:
                    dp[j][j + i] = True
                    ans = [j, j + i]
                j += 1
        i,j = ans
        return s[i: j + 1]